name: Publish

on:
  release:
    types: [published]
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Gang Beasts
        uses: dhkatz/steam-download@v1.2.0
        with:
          username: ${{ secrets.STEAM_USERNAME }}
          vdf: ${{ secrets.STEAM_VDF }}
          appid: ${{ secrets.STEAM_APP_ID }}
          path: "${{ github.workspace }}"

      - name: Verify Gang Beasts Executable
        run: |
          if (!(Test-Path "${{ github.workspace }}\\Gang Beasts.exe")) {
                  Get-ChildItem -Path "${{github.workspace}}" | Write-Output
                  throw "Gang Beasts.exe not found!"
          }

      - name: Install MelonLoader
        run: |
          Invoke-WebRequest -OutFile "${{ github.workspace }}\\MelonLoader.x64.zip" -Uri https://github.com/LavaGang/MelonLoader/releases/latest/download/MelonLoader.x64.zip
          Expand-Archive -Path "${{ github.workspace }}\\MelonLoader.x64.zip" -DestinationPath "${{ github.workspace }}"

      - name: Test-run Gang Beasts
        run: |
          & "${{ github.workspace }}\\Gang Beasts.exe"
          Start-Sleep -Seconds 120
          if (Get-Process "Gang Beasts") { Stop-Process "Gang Beasts" }

      - name: Find and copy Il2CppAssemblies to package
        run: |
          Copy-Item "${{ github.workspace }}\\MelonLoader\\Il2CppAssemblies" -Filter *.dll -Destination "${{ github.workspace }}\\package\\lib\\net6.0" -Recurse

      - uses: actions/upload-artifact@v4.6.0
        name: Upload Artifacts
        with:
          name: lib
          if-no-files-found: error
          path: "${{ github.workspace }}\\package\\lib\\net6.0\\*.dll"

  publish:
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: lib
          path: package\\lib\\net6.0

      - uses: NuGet/setup-nuget@v1.2.0
        with:
          nuget-version: "latest"

      - name: Pack NuGet Package
        run: |
          TAG=${{ github.event.release.tag_name }}
          nuget pack package -OutputFileNamesWithoutVersion -OutputDirectory build -Properties "version=${TAG#v};run=${{github.run_number}}"

      - name: Publish NuGet Package
        run: |
          nuget push "build/GangBeasts.GameLibs.nupkg" -ApiKey ${{ secrets.NUGET_KEY }} -Source https://api.nuget.org/v3/index.json
